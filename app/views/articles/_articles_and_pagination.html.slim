.row
  .section
    .col-3-4
      - if @articles.empty?
        h2 No Articles Matched Search Terms. Use full words.
      - else
        - @articles.each do |article_or_hash|
          
          - article, score = convert_article_or_hash(article_or_hash)
    
          .article
            - if img = article.hero_image_name.presence
              = link_to article_path(article) do
                - img = "heroes/#{img}"
                .hero-secondary style='background-image: url("#{asset_path(img)}")'
                  - if score
                    h3.relevancy= "Relevancy: #{score}"
                  h1 = article.title
            p.article-body
              = markdown(article.body || 'No content')
            p.meta
              = article.created_at.strftime("%b %d, %Y")
              span.stick<> |
              = article.author.name if article.author
        hr
    .col-1-4
      .search
        | Search Articles
        = form_tag "/search", method: :post, id: "search-form", remote: true do
          p
            = autocomplete_field_tag 'title', '', autocomplete_article_title_path, :size => 75
            = submit_tag :search

          div.load.hide

          .results.box.hide
            | No Results
.row
  .section
    = will_paginate


/ Ideally this would be moved to javascripts/articles.js, but I'm having an issue
/ accessing the instance variable @search term there
javascript: 
  $(function () {
    if("#{@search_term}"){
      anchors = $(".pagination a")
      anchors.each(function(){
        var href = $(this).attr('href');
        $(this).attr('href', href + "&title=#{@search_term}")
      })
    }

    $(".pagination").on("click", "a", function () {
      $.get(this.href, null, null, "script");
      return false;
    });

    $('#title').bind('railsAutocomplete.select', function(event, data){
      $('#search-form').submit()
    });
  });
